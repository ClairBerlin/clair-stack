version: "3.8"

services:
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    ports:
      # For access from th elocal dev machine
      - target: 80
        published: 8889
    depends_on:
      - db
    networks:
      - backend

  static_frontend:
    image: clairberlin/website:latest

  managair_server:
    image: clairberlin/managair:latest
    volumes:
      # Mount the local source code folder for quick iterations.
      # See: https://www.docker.com/blog/containerized-python-development-part-3/
      - type: bind
        source: ./managair/
        target: /code
        # consistency: delegated
    ports:
      # For the application's endpoints
      - target: 8888
        published: 8888
      # To attach to the debugger
      - target: 3000
        published: 3000
      - target: 3001
        published: 3001
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DEBUG_TOOLBAR
    deploy:
      placement:
        constraints:
          - node.role == manager # For bind-mounts on swarm to work

  ingestair:
    image: clairberlin/managair:latest
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    ports:
      # To ingest samples from applications on the local dev machine
      - target: 8888
        published: 8890

  # For the TTN Stack V2
  ers_forwarder:
    image: clairberlin/clairttn:ttnv23-paho

  # For the TTN Stack V3
  ers_forwarder_v3:
    image: clairberlin/clairttn:ttnv23-paho
    depends_on:
      - ingestair
    networks:
      - frontend
      - backend
    secrets:
      - ers_v3_api_key
    environment:
      - CLAIR_MODE=ers-forward
      - CLAIR_TTN_APP_ID=elsys-ers-co2
      - CLAIR_TTN_ACCESS_KEY_FILE=/run/secrets/ers_v3_api_key
      - CLAIR_API_ROOT=http://ingestair:8888/ingest/v1/
      - CLAIR_TTN_STACK=ttn-v3

  # ttnv2_mqtt_broker:
  #   image: eclipse-mosquitto:latest
  #   # Tell the entrypoint script to take the configuration from a docker secret
  #   command: ["/usr/sbin/mosquitto", "-c", "/run/secrets/ttnv2_mqtt_broker_config"]
  #   secrets:
  #     - ttnv2_mqtt_broker_config
  #   networks:
  #     - backend
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager # For bind-mounts on docker-swarm to work.

  # ttnv3_mqtt_broker:
  #   image: eclipse-mosquitto:latest
  #   # Tell the entrypoint script to take the configuration from a docker secret
  #   command: ["/usr/sbin/mosquitto", "-c", "/run/secrets/ttnv3_mqtt_broker_config"]
  #   secrets:
  #     - ttnv3_mqtt_broker_config
  #   networks:
  #     - backend
  #   deploy:
  #     placement:
  #       constraints:
  #         - node.role == manager # For bind-mounts on docker-swarm to work.

secrets:
  # The access key for the clairchen-test TTN-V3 application.
  ers_v3_api_key:
    file: secrets/elsys-ers-co2-ttnv3-apikey.txt
  # The access key for the clairchen-test TTN-V3 application.
  clairchen_v3_api_key:
    file: secrets/clairchen-test-ttnv3-apikey.txt
  # The configuration file for the TTN-V2 MQTT bridge,
  # which includes the clair-berlin-ers-co2 TTN access key
  ttnv2_mqtt_broker_config:
    file: secrets/mosquitto_ttnv2.conf

  # The configuration file for the TTN-V3 MQTT bridge,
  # which includes the clairchen-test api key
  ttnv3_mqtt_broker_config:
    file: secrets/mosquitto_ttnv3.conf
