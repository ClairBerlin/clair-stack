version: '3.8'

services: 
    
  db:
    image: postgres
    environment:
      - POSTGRES_DB=managairdb_dev
      - POSTGRES_USER=managair_dev
      - POSTGRES_PASSWORD=postgres
    volumes:
      - type: volume
        source: managair-data
        target: /var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      # For the application's endpoints
      - target: 80
        published: 8889
    depends_on:
      - db 
  
  managair_server:
    build: ./managair/
    command: python manage.py runserver 0.0.0.0:8888
    container_name: managair_server
    environment:
      - DATABASE_URL
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount the local source code folder for quick iterations.
      # See: https://www.docker.com/blog/containerized-python-development-part-3/
      - type: bind
        source: ./managair/
        target: /code
    ports:
      # For the application's endpoints
      - target: 8888
        published: 8888
      # To attach to the debugger
      - target: 3000
        published: 3000
    depends_on:
      - db
    env_file:
      - ./managair_dev.env
    
  ingestair_server:
    # For now, we use the same managair application that also provides the external endpoints. This simplifies sharing of DB models.
    build: ./managair/
    command: python manage.py runserver 0.0.0.0:8888
    container_name: ingestair_server
    environment:
      - DATABASE_URL
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1  
    ports:
      # For the application's endpoints
      - target: 8888
        published: 5555
    depends_on:
      - db
    env_file:
      - ./ingestair_dev.env

volumes:
    managair-data:
      external: true
